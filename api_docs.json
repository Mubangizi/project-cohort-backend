{
  "swagger": "2.0",
  "info": {
    "title": "Project Cohort backend API",
    "description": "Api for Cohort",
    "version": "1.0.0",
    "contact": {
      "email": "mubangizia22@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",

  "paths": {

      "/employees": {
        "get": {
          "tags": [
            "employees"
          ],
          "summary": "Gets all Employees",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Employees"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "employees"
          ],
          "summary": "Adds a new employee",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Employee params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/employee"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Employee"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },

      "/employees/{employee_id}":{
        "get": {
          "tags": [
            "employees"
          ],
          "summary": "Gets a single employee",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "employee_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Employee"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Updates an existing employee",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "employee_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Employee params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/employee"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "employees"
          ],
          "summary": "Deletes single employee",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "employee_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Employee"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/tasks": {
        "get": {
          "tags": [
            "tasks"
          ],
          "summary": "Gets all Tasks",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Tasks"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "tasks"
          ],
          "summary": "Adds a new task",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Task params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/task"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Task"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },

      "/tasks/{task_id}":{
        "get": {
          "tags": [
            "tasks"
          ],
          "summary": "Gets a single task",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "task_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Task"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "tasks"
          ],
          "summary": "Updates an existing task",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "task_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Task params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/task"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "tasks"
          ],
          "summary": "Deletes single task",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "task_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Task"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/consultants": {
        "get": {
          "tags": [
            "consultants"
          ],
          "summary": "Gets all Consultants",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Consultants"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "consultants"
          ],
          "summary": "Adds a new consultant",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Consultant params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/consultant"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Consultant"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },

      "/consultants/{consultant_id}":{
        "get": {
          "tags": [
            "consultants"
          ],
          "summary": "Gets a single consultant",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "consultant_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Consultant"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "consultants"
          ],
          "summary": "Updates an existing consultant",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "consultant_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Consultant params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/consultant"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "consultants"
          ],
          "summary": "Deletes single consultant",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "consultant_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Consultant"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/sales": {
        "get": {
          "tags": [
            "sales"
          ],
          "summary": "Gets all Sales",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Sales"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "sales"
          ],
          "summary": "Adds a new sale",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Sale params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/sale"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Sale"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },

      "/sales/{sale_id}":{
        "get": {
          "tags": [
            "sales"
          ],
          "summary": "Gets a single sale",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "sale_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Sale"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "sales"
          ],
          "summary": "Updates an existing sale",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "sale_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Sale params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/sale"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "sales"
          ],
          "summary": "Deletes single sale",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "sale_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Sale"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/courses": {
        "get": {
          "tags": [
            "courses"
          ],
          "summary": "Gets all Courses",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Courses"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "courses"
          ],
          "summary": "Adds a new course",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Course params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/course"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Course"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },

      "/courses/{course_id}":{
        "get": {
          "tags": [
            "courses"
          ],
          "summary": "Gets a single course",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "course_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Course"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "courses"
          ],
          "summary": "Updates an existing course",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "course_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Course params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/course"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "courses"
          ],
          "summary": "Deletes single course",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "course_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Course"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      
      "/accounts": {
        "get": {
          "tags": [
            "accounts"
          ],
          "summary": "Gets all Accounts",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Accounts"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "accounts"
          ],
          "summary": "Adds a new account",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Account params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/account"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Account"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      
      "/accounts/{account_id}":{
        "get": {
          "tags": [
            "accounts"
          ],
          "summary": "Gets a single account",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "account_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Account"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "accounts"
          ],
          "summary": "Updates an existing account",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "account_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Account params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/account"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "accounts"
          ],
          "summary": "Deletes single account",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "account_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Account"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/businesses": {
        "get": {
          "tags": [
            "businesss"
          ],
          "summary": "Gets all Businesss",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Businesss"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "businesss"
          ],
          "summary": "Adds a new business",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Business params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/business"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new Business"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      
      "/businesses/{business_id}":{
        "get": {
          "tags": [
            "businesss"
          ],
          "summary": "Gets a single business",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "business_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Business"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "businesss"
          ],
          "summary": "Updates an existing business",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "business_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Business params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/business"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "businesss"
          ],
          "summary": "Deletes single business",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "business_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted Business"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Gets all Users",
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Users"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Adds a new user",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added a new User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      
      "/users/{user_id}":{
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Gets a single user",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": [
            "users"
          ],
          "summary": "Updates an existing user",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Post"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Deletes single user",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
           

  },

  "definitions": {
      "employee": {
        "type": "object",
        "required": [
          "name",
          "salary"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "employee name"
          },
          "age": {
            "type": "string",
            "example": 20
          },
          "salary": {
            "type": "integer",
            "example": 100000
          }
        }
      },
      
      "task": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "task name"
          },
          "description": {
            "type": "string",
            "example": "task decription"
          }
        }
      },

      "consultant": {
        "type": "object",
        "required": [
          "name",
          "field"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "consultant name"
          },
          "field": {
            "type": "string",
            "example": "consultant field"
          },
          "age": {
            "type": "integer",
            "example": 20
          },
          "salary": {
            "type": "integer",
            "example": 100000
          }
        }
      },
      "sale": {
        "type": "object",
        "required": [
          "product",
          "quantity",
          "amount"
        ],
        "properties": {
          "product": {
            "type": "string",
            "example": "sale product"
          },
          "quantity": {
            "type": "integer",
            "example": 10
          },
          "amount": {
            "type": "integer",
            "example": 100000
          }
        }
      },

      "course": {
        "type": "object",
        "required": [
          "name",
          "code",
          "lecturer"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "course name"
          },
          "code": {
            "type": "string",
            "example": "CO105"
          },
          "lecturer": {
            "type": "string",
            "example": "Mr Lecturer"
          }
        }
      },

      "account": {
        "type": "object",
        "required": [
          "name",
          "number",
          "bank"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "account name"
          },
          "number": {
            "type": "integer",
            "example": "133331315"
          },
          "bank": {
            "type": "string",
            "example": "accounts bank"
          }
        }
      },
      "business": {
        "type": "object",
        "required": [
          "name",
          "business_type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "business name"
          },
          "business_type": {
            "type": "integer",
            "example": "business type"
          },
          "age": {
            "type": "string",
            "example": "20 years"
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "username",
          "email",
          "gender"

        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "username"
          },
          "email": {
            "type": "integer",
            "example": "user@email.com"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "address": {
            "type": "string",
            "example": "Kampala Uganda"
          }
        }
      }


  }
}  